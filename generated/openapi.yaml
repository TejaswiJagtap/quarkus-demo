---
openapi: 3.1.0
components:
  schemas:
    CategoryDto:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Roles:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        users:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/User"
    UUID:
      type: string
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Roles"
    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    SecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Authentication
paths:
  /category:
    get:
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get All Paginated
      tags:
      - Category Resource
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /category/all:
    get:
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get All
      tags:
      - Category Resource
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /category/save:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Save Or Update Category
      tags:
      - Category Resource
      security:
      - SecurityScheme:
        - ADMIN
  /category/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get By Id
      tags:
      - Category Resource
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /roles:
    get:
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get All Roles
      tags:
      - Roles Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Roles"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Create Role
      tags:
      - Roles Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /roles/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Roles"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Update Role
      tags:
      - Roles Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get Role By Id
      tags:
      - Roles Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete Role
      tags:
      - Roles Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /user/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Login
      tags:
      - Login Controller
  /users:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get Users
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /users/search/{email}:
    get:
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Search
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /users/signup:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Create User
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
  /users/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Update User
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get User By Id
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete User
      tags:
      - User Controller
      security:
      - SecurityScheme:
        - ADMIN
        - USER
info:
  title: quarkus-demo API
  version: 1.0.0-SNAPSHOT
servers:
- url: http://localhost:8081
  description: Auto generated value
- url: http://0.0.0.0:8081
  description: Auto generated value
